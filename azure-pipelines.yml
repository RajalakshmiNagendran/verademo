trigger:
- main

pool:
  name: 'azureagent'

steps:
# Step 1: Package Binaries
- task: CmdLine@2
  displayName: Package Artifacts
  inputs:
    script: |
      curl -fsS https://tools.veracode.com/veracode-cli/install | sh
      ./veracode package --source $(Build.SourcesDirectory) --output $(Build.ArtifactStagingDirectory)/artifacts --trust
  env: 
      VERACODE_API_KEY_ID: $(myVeracodeId)
      VERACODE_API_KEY_SECRET: $(myVeracodeSecret)

# Step 2: Archive Packaged Binaries
- task: ArchiveFiles@2
  displayName: Archive Packaged Binaries
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/artifacts'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

# Download build and pipeline artifacts.
- task: DownloadPipelineArtifact@2
  inputs:
    buildType: 'current'
    targetPath: '$(Pipeline.Workspace)/$(Build.BuildId).zip'

# Publish (upload) a file or directory as a named artifact for the current run.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
    publishLocation: 'pipeline'

# Step 5: Scan the ZIP File with Veracode
- task: CmdLine@2
  displayName: Veracode Pipeline Scan
  inputs:
    script: |
      curl -sSO https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
      unzip -o pipeline-scan-LATEST.zip
      java -jar pipeline-scan.jar -vid $(myVeracodeId) -vkey $(myVeracodeSecret) -f $(Pipeline.Workspace)/$(Build.BuildId).zip